import pickle
import re
import streamlit as st
from nltk.corpus import stopwords

# Load saved objects
with open('model.pkl', 'rb') as f:
    model = pickle.load(f)

with open('vectorizer.pkl', 'rb') as f:
    vectorizer = pickle.load(f)

with open('lemmatizer.pkl', 'rb') as f:
    lemmatizer = pickle.load(f)

stop_words = set(stopwords.words('english'))

# H√†m d·ª± ƒëo√°n
def predict_sentiment(text):
    text = text.lower()
    text = re.sub(r'<.*?>', '', text)
    text = re.sub(r'[^a-zA-Z]', ' ', text)
    tokens = text.split()
    tokens = [lemmatizer.lemmatize(word) for word in tokens if word not in stop_words]
    cleaned_text = ' '.join(tokens)
    text_vector = vectorizer.transform([cleaned_text])
    prediction = model.predict(text_vector)
    return "Positive üòÄ" if prediction[0] == 1 else "Negative üòû"

# ==========================
# Streamlit App
# ==========================
st.title("üé• Ph√¢n t√≠ch c·∫£m x√∫c review phim (IMDB) ")
st.markdown("""
Nh·∫≠p review b·∫±ng ti·∫øng Anh v√†o √¥ b√™n d∆∞·ªõi, nh·∫•n n√∫t **Ph√¢n t√≠ch** 
v√† xem k·∫øt qu·∫£ d·ª± ƒëo√°n c·∫£m x√∫c.
""")

user_input = st.text_area("Nh·∫≠p review:", "")

if st.button("Ph√¢n t√≠ch"):
    if user_input.strip() == "":
        st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p review tr∆∞·ªõc khi ph√¢n t√≠ch.")
    else:
        result = predict_sentiment(user_input)
        st.markdown(f"### K·∫øt qu·∫£: {result}")

